/* Cpot_PreviewPatch.css */

table.Cpot_PreviewPatch{
    display: block;
    margin: 0px;
    background-color: white;
    border: 1px solid black;
    border-spacing: 0px;
    font-size: 0;
}

table.Cpot_PreviewPatch tbody{
    border: none;
}

table.Cpot_PreviewPatch td{
    border: 1px solid black;
    padding: 0px;
     /*this next rule seems to ensure width and height properties are treated
    equivalently when there is a 1px border. I can't think why this wasn't
    an issue when originally developed.
    */
    display: inline-block;
}



div.Cpot_PreviewPatch.invalid{
    border: 2px solid black;
    background: linear-gradient(135deg, rgba(49,57,61,0.8) 0%,rgba(84,123,152,0.8) 100%);
    
}

div.Cpot_PreviewPatch.invalid{
        display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center; /* align horizontal */
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; /* align vertical */
    flex-direction: column;
}

div.Cpot_PreviewPatch div{
    width: 80%;
    text-align: center;
    font-size: 10px;
    margin: 5px 0px;
    color: white;
    font-weight: bold;
}


